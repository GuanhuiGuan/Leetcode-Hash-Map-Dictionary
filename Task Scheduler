class Solution {
    public int leastInterval(char[] tasks, int n) {
        int[] freq = new int[26];//record the frequency for each job
        for(char job : tasks){
            freq[job - 'A']++;
        }
        Arrays.sort(freq);//the last element has the highest frequency
        
        int i = 25;
        while(i >= 0 && freq[i] == freq[25]){i--;}//num of elements have less frequency than the highest
        
        return Math.max(tasks.length, (n + 1) * (freq[25] - 1) + (25 - i));
        //1 job + n idles/other jobs = n+1 for the first f-1 intervals, and only those with freq f will be in the last interval
        //if the task length is even longer, that will be the answer
    }
}
